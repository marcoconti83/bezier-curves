(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     33889,        792]
NotebookOptionsPosition[     32440,        738]
NotebookOutlinePosition[     32796,        754]
CellTagsIndexPosition[     32753,        751]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Bezier curves\n", "Title"],
 StyleBox["Definitions", "Subtitle"]
}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.613043880732245*^9, 3.6130439134217653`*^9}}],

Cell[TextData[{
 StyleBox["Generic Bezier curve equation (of ", "Text"],
 "n",
 StyleBox["-th order) with ", "Text"],
 "n",
 StyleBox[" control points ", "Text"],
 "pts",
 StyleBox[". ", "Text"],
 StyleBox[Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]], "Text"], "Text"]
}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.613044182508835*^9, 3.6130442245068893`*^9}, {
   3.613044612913538*^9, 3.613044673139599*^9}, {3.613049031896895*^9, 
   3.6130491584058943`*^9}, 3.613924811227521*^9},
 FormatType->"TextForm"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bez", " ", "[", 
   RowBox[{"t_", ",", "pts_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{
       RowBox[{"Length", "[", "pts", "]"}], "-", "1"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"n", ",", "i"}], "]"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "i"}], ")"}], "\[Equal]", 
          RowBox[{"0", "And", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", "0"}], ",", "1", 
         ",", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}], 
          RowBox[{"n", "-", "i"}]]}], "]"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", " ", "\[Equal]", 
          RowBox[{"0", " ", "And", " ", "t"}], " ", "\[Equal]", "0"}], ",", 
         " ", "1", ",", 
         SuperscriptBox["t", "i"]}], "]"}], 
       RowBox[{"pts", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.613037359240456*^9, 3.613037385181444*^9}, {
   3.613037423719123*^9, 3.6130374304370832`*^9}, {3.613037819502346*^9, 
   3.613037855587049*^9}, {3.6130378907414017`*^9, 3.61303791360957*^9}, {
   3.6130380986277733`*^9, 3.61303821294444*^9}, {3.6130382933593283`*^9, 
   3.613038355506501*^9}, {3.6130397404788923`*^9, 3.613039753240652*^9}, {
   3.613042166629685*^9, 3.6130421859807034`*^9}, {3.613042226564702*^9, 
   3.613042250613967*^9}, {3.613042291567449*^9, 3.613042318311551*^9}, {
   3.613042393086779*^9, 3.613042457806567*^9}, 3.613043869441864*^9, {
   3.613060834500738*^9, 3.613060904890444*^9}, {3.613446660589011*^9, 
   3.613446661028201*^9}}],

Cell[TextData[StyleBox["Parametric plot of a Bezier curve showing the curve \
and the control points :", "Text"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.613044211982008*^9, 3.6130442459705877`*^9}, 
   3.6130444739496*^9, 3.613924817037561*^9, {3.613926136222946*^9, 
   3.6139261366773987`*^9}},
 FormatType->"TextForm"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotBezier", "[", "pts_", "]"}], " ", ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"bez", "[", 
       RowBox[{"t", ",", "pts"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"pts", ",", " ", 
      RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", " ", 
      RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[FilledCircle]\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6130385017828903`*^9, 3.613038518320511*^9}, {
   3.6130385596087837`*^9, 3.6130385786375103`*^9}, {3.6130386313568363`*^9, 
   3.613038703276533*^9}, {3.613038734401185*^9, 3.6130387452636557`*^9}, {
   3.613038783209324*^9, 3.6130388176634617`*^9}, {3.613038916383581*^9, 
   3.61303893066081*^9}, {3.613039276926156*^9, 3.613039282877997*^9}, {
   3.6130393396369753`*^9, 3.613039407682876*^9}, {3.613039485226315*^9, 
   3.613039518508586*^9}, {3.613039689830727*^9, 3.613039719337208*^9}, {
   3.6130398116796703`*^9, 3.613039820381637*^9}, {3.6130413357028933`*^9, 
   3.613041364175621*^9}, {3.6130414007551517`*^9, 3.6130414199224977`*^9}, {
   3.613061218878027*^9, 3.613061220395381*^9}, {3.613061382655653*^9, 
   3.613061392105604*^9}, {3.613061432586246*^9, 3.613061445032619*^9}, {
   3.6130614931546497`*^9, 3.61306156890646*^9}, {3.6134466655723867`*^9, 
   3.613446665818964*^9}, {3.613446709148093*^9, 3.613446709722907*^9}, 
   3.6139257567949333`*^9, {3.613925875699514*^9, 3.6139258788187847`*^9}, {
   3.6139259179143744`*^9, 3.613925933067933*^9}, {3.613925966674026*^9, 
   3.613925968308523*^9}, {3.613926192569096*^9, 3.613926209593261*^9}, {
   3.6139263085397987`*^9, 3.613926312797687*^9}}],

Cell[TextData[{
 StyleBox["Find the ", "Text"],
 "t",
 StyleBox["'s that are solution for the given point ", "Text"],
 "p",
 StyleBox[" on the Bezier curve defined by the control points ", "Text"],
 "pts",
 StyleBox[".\nIf the point ", "Text"],
 "p",
 StyleBox[" is not part of the curve, the resulting list will be empty.", 
  "Text"]
}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.613044305527631*^9, 3.613044368949647*^9}, {
   3.613044650760007*^9, 3.6130446529852343`*^9}, {3.613049181214662*^9, 
   3.613049276485366*^9}, 3.61392482347126*^9, {3.6139261328303137`*^9, 
   3.613926133613463*^9}},
 FormatType->"TextForm"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveBezierT", "[", 
   RowBox[{"p_", ",", "pts_"}], "]"}], " ", ":=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"p", " ", "\[Equal]", "  ", 
     RowBox[{"bez", "[", 
      RowBox[{"t", ",", "pts"}], "]"}]}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.613042564395822*^9, 3.613042691675611*^9}, {
  3.613043924983027*^9, 3.613043927270545*^9}, {3.613044372239451*^9, 
  3.613044374824168*^9}, {3.613044430025145*^9, 3.613044433318541*^9}, {
  3.6134466686428843`*^9, 3.613446668874276*^9}, {3.613446706787339*^9, 
  3.613446706922092*^9}, {3.613924731900091*^9, 3.613924733348543*^9}}],

Cell[TextData[{
 StyleBox["Find ", "Text"],
 "numPoint",
 StyleBox[" points on the Bezier curve defined by the control points ", 
  "Text"],
 "pts",
 StyleBox[" equally distributed over the ", "Text"],
 "t",
 StyleBox[" interval", "Text"]
}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.613924735129911*^9, 3.613924796619679*^9}, 
   3.613924933978703*^9, {3.613924965944808*^9, 3.613924985173501*^9}, {
   3.613926154413513*^9, 3.613926160545368*^9}},
 FormatType->"TextForm"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointsOnBezier", "[", 
   RowBox[{"numPoints_", ",", "pts_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"bez", "[", 
     RowBox[{"t", ",", "pts"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", " ", "numPoints"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6139249372106037`*^9, 3.6139249591697197`*^9}, {
   3.613924991862397*^9, 3.6139250185503807`*^9}, {3.613925237337167*^9, 
   3.61392523804801*^9}, {3.6139252796822243`*^9, 3.613925291431855*^9}, 
   3.613925321809104*^9, {3.6139253779755983`*^9, 3.6139253814151297`*^9}, {
   3.613925506087771*^9, 3.6139255090379963`*^9}, {3.613925574783348*^9, 
   3.613925587469592*^9}}],

Cell[TextData[StyleBox["Examples", "Subtitle"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.613044388807415*^9, 3.6130444021892147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pts", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "500"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"475", ",", "400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "500"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.613042477280892*^9, 3.613042481070788*^9}, 
   3.613044387288686*^9, 3.6130445070168877`*^9, 3.613446675010606*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotBezier", "[", "pts", "]"}]], "Input",
 CellChangeTimes->{{3.6130391893898087`*^9, 3.613039194412671*^9}, {
  3.613039523580275*^9, 3.613039526663621*^9}, {3.6130396707534227`*^9, 
  3.613039682525276*^9}, {3.613040045041601*^9, 3.613040050326733*^9}, {
  3.613041247827153*^9, 3.613041253667777*^9}, {3.613042557258349*^9, 
  3.6130425585196466`*^9}, {3.613446679346899*^9, 3.6134466795377407`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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

      "]]}}, {{}, 
    GraphicsComplexBox[{{100., 500.}, {25., 400.}, {475., 400.}, {400., 
     500.}}, {{{}, {}, 
       {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
        LineBox[{1, 2, 3, 4}]}}, {
       {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
        TagBox[InsetBox["\[FilledCircle]", 1],
         "InsetString"], 
        TagBox[InsetBox["\[FilledCircle]", 2],
         "InsetString"], 
        TagBox[InsetBox["\[FilledCircle]", 3],
         "InsetString"], 
        TagBox[InsetBox["\[FilledCircle]", 4],
         "InsetString"]}, {}}}], {}}},
  Axes->False,
  AxesOrigin->{100., 430.},
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.613039527109179*^9, {3.613039682800037*^9, 3.6130397593793917`*^9}, 
   3.613039822889264*^9, 3.6130400518912563`*^9, 3.6130412569269323`*^9, {
   3.613041349892867*^9, 3.613041367753516*^9}, {3.613041410834174*^9, 
   3.6130414227382717`*^9}, 3.6130418772729*^9, 3.613042193060739*^9, 
   3.613042238413612*^9, {3.6130423079894533`*^9, 3.613042324096273*^9}, 
   3.613042358116724*^9, 3.6130424885037527`*^9, 3.613042558832026*^9, 
   3.613044454059211*^9, 3.613044865839766*^9, 3.613046580184243*^9, {
   3.613060858177725*^9, 3.6130609329453917`*^9}, 3.6130611341336813`*^9, 
   3.613061226571917*^9, 3.613061396307868*^9, {3.6130614399063797`*^9, 
   3.613061448199782*^9}, {3.613061502524022*^9, 3.6130615642775793`*^9}, 
   3.613446680845813*^9, 3.613446712673604*^9, 3.613924714654195*^9, 
   3.61392576564929*^9, 3.613925887800826*^9, {3.6139259290557833`*^9, 
   3.613925940009145*^9}, {3.6139259734631853`*^9, 3.613925982546071*^9}, {
   3.613926078430778*^9, 3.613926092763753*^9}, 3.613926129136792*^9, {
   3.613926177793057*^9, 3.613926201658504*^9}, 3.613926316632554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solveBezierT", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", ",", "500"}], "}"}], ",", "pts"}], "]"}]], "Input",
 CellChangeTimes->{{3.61304269696471*^9, 3.613042705591227*^9}, 
   3.6130444378102818`*^9, {3.613446696089398*^9, 3.613446696425537*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6130427060338993`*^9, {3.613044438551415*^9, 3.61304445410501*^9}, 
   3.613044865885426*^9, 3.6130465839994698`*^9, {3.613060861866048*^9, 
   3.6130609329851627`*^9}, 3.613061134167355*^9, 3.6130612266146603`*^9, 
   3.613061396340685*^9, {3.613061439947319*^9, 3.613061448224298*^9}, {
   3.613061502549513*^9, 3.6130615643173857`*^9}, {3.613446696946266*^9, 
   3.613446714885393*^9}, 3.61392471469324*^9, 3.6139259825876513`*^9, {
   3.613926078470099*^9, 3.6139260927874737`*^9}, 3.613926129160036*^9, {
   3.613926177835511*^9, 3.613926201690199*^9}, 3.613926316673739*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quadraticBezier", " ", "=", 
  RowBox[{"bez", "[", 
   RowBox[{"t", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["y", "1"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["y", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "3"], ",", 
        SubscriptBox["y", "3"]}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.613046560163107*^9, 3.61304656369014*^9}, {
   3.61304966613477*^9, 3.613049666850298*^9}, 3.613055944537237*^9, {
   3.613061006844165*^9, 3.613061020688373*^9}, {3.6130610766321*^9, 
   3.613061117255205*^9}, {3.613446719835216*^9, 3.6134467200020323`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], "2"], " ", 
     SubscriptBox["x", "1"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", "t", " ", 
     SubscriptBox["x", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["t", "2"], " ", 
     SubscriptBox["x", "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], "2"], " ", 
     SubscriptBox["y", "1"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", "t", " ", 
     SubscriptBox["y", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["t", "2"], " ", 
     SubscriptBox["y", "3"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.613061080335614*^9, 3.613061134201131*^9}, 
   3.613061226664186*^9, 3.6130613963738403`*^9, {3.6130614399815283`*^9, 
   3.613061448258152*^9}, {3.6130615025833397`*^9, 3.613061564350317*^9}, 
   3.6134467219039516`*^9, 3.6139247147263737`*^9, 3.6139259826213017`*^9, {
   3.613926078503261*^9, 3.613926092821055*^9}, 3.613926129193798*^9, {
   3.613926177869298*^9, 3.6139262017392273`*^9}, 3.613926316707942*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"cubicBezier", " ", "=", 
   RowBox[{"bez", "[", 
    RowBox[{"t", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         SubscriptBox["y", "1"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "2"], ",", 
         SubscriptBox["y", "2"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "3"], ",", 
         SubscriptBox["y", "3"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "4"], ",", 
         SubscriptBox["y", "4"]}], "}"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.613060974089987*^9, 3.6130609789597692`*^9}, {
   3.61306102825664*^9, 3.613061056375966*^9}, 3.613061127936145*^9, {
   3.6134467256674*^9, 3.6134467257944527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], "3"], " ", 
     SubscriptBox["x", "1"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], "2"], " ", "t", " ", 
     SubscriptBox["x", "2"]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", 
     SuperscriptBox["t", "2"], " ", 
     SubscriptBox["x", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["t", "3"], " ", 
     SubscriptBox["x", "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], "3"], " ", 
     SubscriptBox["y", "1"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], "2"], " ", "t", " ", 
     SubscriptBox["y", "2"]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", 
     SuperscriptBox["t", "2"], " ", 
     SubscriptBox["y", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["t", "3"], " ", 
     SubscriptBox["y", "4"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6130611283655577`*^9, 3.613061134233634*^9}, 
   3.6130612266969137`*^9, 3.6130613964077187`*^9, {3.61306144001515*^9, 
   3.613061448289998*^9}, {3.613061502617249*^9, 3.613061564383801*^9}, 
   3.613446726286914*^9, 3.6139247147594137`*^9, 3.613925982654299*^9, {
   3.613926078535942*^9, 3.613926092855535*^9}, 3.613926129227275*^9, {
   3.613926177901411*^9, 3.613926201773225*^9}, 3.613926316742978*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pb", " ", "=", 
  RowBox[{"pointsOnBezier", "[", 
   RowBox[{"10", ",", "pts"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6139253049997807`*^9, 3.6139253110940943`*^9}, {
  3.613925702649551*^9, 3.61392570812079*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", ",", "500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["461", "5"], ",", "473"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["548", "5"], ",", "452"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1459", "10"], ",", "437"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["974", "5"], ",", "428"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"250", ",", "425"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1526", "5"], ",", "428"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3541", "10"], ",", "437"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1952", "5"], ",", "452"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2039", "5"], ",", "473"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"400", ",", "500"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6139253244459867`*^9, 3.61392551289202*^9, {3.613925582227014*^9, 
   3.613925589979354*^9}, 3.6139256457879543`*^9, {3.6139257053955717`*^9, 
   3.613925708647307*^9}, 3.613925982688479*^9, {3.6139260785694113`*^9, 
   3.613926092888438*^9}, 3.613926129261683*^9, {3.6139261779349527`*^9, 
   3.6139262018064537`*^9}, 3.613926316772519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "pb", "]"}]], "Input",
 CellChangeTimes->{{3.613925652443416*^9, 3.613925665453218*^9}, {
  3.613925710609949*^9, 3.6139257136565733`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{100., 500.}, {92.2, 473.}, {109.6, 452.}, {145.9, 437.}, {
     194.8, 428.}, {250., 425.}, {305.2, 428.}, {354.1, 437.}, {390.4, 
     452.}, {407.8, 473.}, {400., 500.}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{92.2, 425.},
  Method->{},
  PlotRange->{{92.2, 407.8}, {425., 500.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{6.312, 6.312}, {1.5, 1.5}}]], "Output",
 CellChangeTimes->{
  3.613925665911076*^9, 3.613925714030356*^9, 3.613925982722204*^9, {
   3.613926078603492*^9, 3.613926092921817*^9}, 3.613926129294961*^9, {
   3.613926177969871*^9, 3.613926201841077*^9}, 3.613926316808864*^9}]
}, Open  ]]
},
WindowSize->{979, 690},
WindowMargins->{{Automatic, 43}, {Automatic, 50}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 193, 5, 97, "Input",
 Evaluatable->False],
Cell[753, 27, 526, 15, 33, "Input",
 Evaluatable->False],
Cell[1282, 44, 2059, 50, 96, "Input"],
Cell[3344, 96, 335, 6, 31, "Input",
 Evaluatable->False],
Cell[3682, 104, 2146, 39, 46, "Input"],
Cell[5831, 145, 635, 17, 52, "Input",
 Evaluatable->False],
Cell[6469, 164, 639, 13, 28, "Input"],
Cell[7111, 179, 485, 14, 32, "Input",
 Evaluatable->False],
Cell[7599, 195, 751, 16, 28, "Input"],
Cell[8353, 213, 146, 2, 44, "Input",
 Evaluatable->False],
Cell[8502, 217, 514, 14, 28, "Input"],
Cell[CellGroupData[{
Cell[9041, 235, 427, 6, 28, "Input"],
Cell[9471, 243, 14704, 250, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24212, 498, 282, 6, 28, "Input"],
Cell[24497, 506, 708, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25242, 523, 803, 21, 28, "Input"],
Cell[26048, 546, 1243, 34, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27328, 585, 883, 25, 46, "Input"],
Cell[28214, 612, 1614, 46, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29865, 663, 241, 5, 28, "Input"],
Cell[30109, 670, 1311, 38, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31457, 713, 179, 3, 28, "Input"],
Cell[31639, 718, 785, 17, 241, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
